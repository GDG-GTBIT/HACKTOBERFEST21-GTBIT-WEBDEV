{"version":3,"sources":["../../../../source/lib/style/classes/alignment.js"],"names":["types","require","xmlbuilder","Alignment","opts","horizontal","undefined","alignment","validate","vertical","readingOrder","indent","parseInt","TypeError","justifyLastLine","relativeIndent","shrinkToFit","textRotation","wrapText","obj","ele","thisEle","att","module","exports"],"mappings":"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","file":"alignment.js","sourcesContent":["const types = require('../../types/index.js');\nconst xmlbuilder = require('xmlbuilder');\n\nclass Alignment { // ยง18.8.1 alignment (Alignment)\n    /**\n     * @class Alignment\n     * @param {Object} opts Properties of Alignment object\n     * @param {String} opts.horizontal Horizontal Alignment property of text. \n     * @param {String} opts.vertical Vertical Alignment property of text. \n     * @param {String} opts.readingOrder Reading order for language of text.\n     * @param {Number} opts.indent How much text should be indented. Setting indent to 1 will indent text 3 spaces\n     * @param {Boolean} opts.justifyLastLine Specifies whether to justify last line of text\n     * @param {Number} opts.relativeIndent Used in conditional formatting to state how much more text should be indented if rule passes\n     * @param {Boolean} opts.shrinkToFit Indicates if text should be shrunk to fit into cell\n     * @param {Number} opts.textRotation Number of degrees to rotate text counterclockwise\n     * @param {Boolean} opts.wrapText States whether text with newline characters should wrap\n     * @returns {Alignment}\n     */\n    constructor(opts) {\n\n        if (opts.horizontal !== undefined) {\n            this.horizontal = types.alignment.horizontal.validate(opts.horizontal) === true ? opts.horizontal : null;\n        }\n\n        if (opts.vertical !== undefined) {\n            this.vertical = types.alignment.vertical.validate(opts.vertical) === true ? opts.vertical : null;\n        }\n\n        if (opts.readingOrder !== undefined) {\n            this.readingOrder = types.alignment.readingOrder.validate(opts.readingOrder) === true ? opts.readingOrder : null;\n        }\n\n        if (opts.indent !== undefined) {\n            if (typeof opts.indent === 'number' && parseInt(opts.indent) === opts.indent && opts.indent > 0) {\n                this.indent = opts.indent;\n            } else {\n                throw new TypeError('alignment indent must be a positive integer.');\n            }\n        }\n\n        if (opts.justifyLastLine !== undefined) {\n            if (typeof opts.justifyLastLine === 'boolean') {\n                this.justifyLastLine = opts.justifyLastLine;\n            } else {\n                throw new TypeError('justifyLastLine alignment option must be of type boolean');\n            }\n        }\n\n        if (opts.relativeIndent !== undefined) {\n            if (typeof opts.relativeIndent === 'number' && parseInt(opts.relativeIndent) === opts.relativeIndent && opts.relativeIndent > 0) {\n                this.relativeIndent = opts.relativeIndent;\n            } else {\n                throw new TypeError('alignment indent must be a positive integer.');\n            }\n        }\n\n        if (opts.shrinkToFit !== undefined) {\n            if (typeof opts.shrinkToFit === 'boolean') {\n                this.shrinkToFit = opts.shrinkToFit;\n            } else {\n                throw new TypeError('justifyLastLine alignment option must be of type boolean');\n            }\n        }\n\n        if (opts.textRotation !== undefined) {\n            if (typeof opts.textRotation === 'number' && parseInt(opts.textRotation) === opts.textRotation) {\n                this.textRotation = opts.textRotation;\n            } else if (opts.textRotation !== undefined) {\n                throw new TypeError('alignment indent must be an integer.');\n            }\n        }\n\n        if (opts.wrapText !== undefined) {\n            if (typeof opts.wrapText === 'boolean') {\n                this.wrapText = opts.wrapText;\n            } else {\n                throw new TypeError('justifyLastLine alignment option must be of type boolean');\n            }\n        }\n    }\n\n    /** \n     * @func Alignment.toObject\n     * @desc Converts the Alignment instance to a javascript object\n     * @returns {Object}\n     */\n    toObject() {\n        let obj = {};\n\n        this.horizontal !== undefined ? obj.horizontal = this.horizontal : null;\n        this.indent !== undefined ? obj.indent = this.indent : null;\n        this.justifyLastLine !== undefined ? obj.justifyLastLine = this.justifyLastLine : null;\n        this.readingOrder !== undefined ? obj.readingOrder = this.readingOrder : null;\n        this.relativeIndent !== undefined ? obj.relativeIndent = this.relativeIndent : null;\n        this.shrinkToFit !== undefined ? obj.shrinkToFit = this.shrinkToFit : null;\n        this.textRotation !== undefined ? obj.textRotation = this.textRotation : null;\n        this.vertical !== undefined ? obj.vertical = this.vertical : null;\n        this.wrapText !== undefined ? obj.wrapText = this.wrapText : null;\n\n        return obj;\n    }\n\n    /**\n     * @alias Alignment.addToXMLele\n     * @desc When generating Workbook output, attaches style to the styles xml file\n     * @func Alignment.addToXMLele\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\n     */\n    addToXMLele(ele) {\n        let thisEle = ele.ele('alignment');\n        this.horizontal !== undefined ? thisEle.att('horizontal', this.horizontal) : null;\n        this.indent !== undefined ? thisEle.att('indent', this.indent) : null;\n        this.justifyLastLine === true ? thisEle.att('justifyLastLine', 1) : null;\n        this.readingOrder !== undefined ? thisEle.att('readingOrder', this.readingOrder) : null;\n        this.relativeIndent !== undefined ? thisEle.att('relativeIndent', this.relativeIndent) : null;\n        this.shrinkToFit === true ? thisEle.att('shrinkToFit', 1) : null;\n        this.textRotation !== undefined ? thisEle.att('textRotation', this.textRotation) : null;\n        this.vertical !== undefined ? thisEle.att('vertical', this.vertical) : null;\n        this.wrapText === true ? thisEle.att('wrapText', 1) : null;\n    }\n}\n\nmodule.exports = Alignment;"]}