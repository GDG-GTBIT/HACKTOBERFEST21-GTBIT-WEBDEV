{"version":3,"sources":["../../../source/lib/types/positiveUniversalMeasure.js"],"names":["measure","prototype","validate","val","re","RegExp","test","TypeError","module","exports"],"mappings":";;AAAA;;AAEA,SAASA,OAAT,GAAmB,CAClB;;AAEDA,QAAQC,SAAR,CAAkBC,QAAlB,GAA6B,UAAUC,GAAV,EAAe;AACxC,QAAIC,KAAK,IAAIC,MAAJ,CAAW,sCAAX,CAAT;AACA,QAAID,GAAGE,IAAH,CAAQH,GAAR,MAAiB,IAArB,EAA2B;AACvB,cAAM,IAAII,SAAJ,CAAc,iKAAd,CAAN;AACH,KAFD,MAEO;AACH,eAAO,IAAP;AACH;AACJ,CAPD;;AASAC,OAAOC,OAAP,GAAiB,IAAIT,OAAJ,EAAjB","file":"positiveUniversalMeasure.js","sourcesContent":["//ยง22.9.2.12 ST_PositiveUniversalMeasure (Positive Universal Measurement)\n\nfunction measure() {\n}\n\nmeasure.prototype.validate = function (val) {\n    let re = new RegExp('[0-9]+(\\.[0-9]+)?(mm|cm|in|pt|pc|pi)');\n    if (re.test(val) !== true) {\n        throw new TypeError('Invalid value for universal positive measure. Value must a positive Float immediately followed by unit of measure from list mm, cm, in, pt, pc, pi. i.e. 10.5cm');\n    } else {\n        return true;\n    }\n};\n\nmodule.exports = new measure();"]}