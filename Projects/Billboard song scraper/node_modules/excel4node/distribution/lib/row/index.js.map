{"version":3,"sources":["../../../source/lib/row/index.js"],"names":["Row","require","rowAccessor","ws","row","TypeError","rows","module","exports"],"mappings":";;AAAA,IAAMA,MAAMC,QAAQ,eAAR,CAAZ;;AAEA;;;;;;;;;AASA,IAAIC,cAAc,SAAdA,WAAc,CAAUC,EAAV,EAAcC,GAAd,EAAmB;;AAEjC,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,cAAM,IAAIC,SAAJ,CAAc,4CAAd,CAAN;AACH;;AAED,QAAI,EAAEF,GAAGG,IAAH,CAAQF,GAAR,aAAwBJ,GAA1B,CAAJ,EAAoC;AAChCG,WAAGG,IAAH,CAAQF,GAAR,IAAe,IAAIJ,GAAJ,CAAQI,GAAR,EAAaD,EAAb,CAAf;AACH;;AAED,WAAOA,GAAGG,IAAH,CAAQF,GAAR,CAAP;AACH,CAXD;;AAeAG,OAAOC,OAAP,GAAiBN,WAAjB","file":"index.js","sourcesContent":["const Row = require('../row/row.js');\n\n/**\n * Module repesenting a Row Accessor\n * @alias Worksheet.row\n * @namespace\n * @func Worksheet.row\n * @desc Access a row in order to manipulate values\n * @param {Number} row Row of top left cell\n * @returns {Row}\n */\nlet rowAccessor = function (ws, row) {\n\n    if (typeof row !== 'number') {\n        throw new TypeError('Row sent to row accessor was not a number.');\n    }\n\n    if (!(ws.rows[row] instanceof Row)) {\n        ws.rows[row] = new Row(row, ws);\n    }\n\n    return ws.rows[row];\n};\n\n\n\nmodule.exports = rowAccessor;"]}