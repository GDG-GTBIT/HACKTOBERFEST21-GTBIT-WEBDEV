{"version":3,"sources":["../../../source/lib/workbook/workbook.js"],"names":["_isUndefined","require","deepmerge","fs","utils","Worksheet","Style","Border","Fill","Font","DXFCollection","MediaCollection","DefinedNameCollection","types","builder","http","SimpleLogger","workbookDefaultOpts","jszip","compression","defaultFont","dateFormat","Workbook","opts","hasCustomLogger","logger","undefined","hasValidCustomLogger","warn","error","logLevel","Number","isNaN","parseInt","log","author","sheets","sharedStrings","sharedStringLookup","Map","styles","stylesLookup","dxfCollection","mediaCollection","definedNameCollection","styleData","type","patternType","styleDataLookup","fills","reduce","ret","fill","index","JSON","stringify","toObject","borders","border","createStyle","font","id","forEach","s","sheetId","sheetView","tabSelected","writeToBuffer","fileName","handler","then","buffer","ServerResponse","writeHead","length","encodeURIComponent","end","TypeError","writeFile","err","stat","catch","e","stack","status","setHeader","name","newLength","push","thisStyle","lookupKey","get","set","ids","cellXfs","val","target","workbookXML","module","exports"],"mappings":"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","file":"workbook.js","sourcesContent":["const _isUndefined = require('lodash.isundefined');\nconst deepmerge = require('deepmerge');\nconst fs = require('fs');\nconst utils = require('../utils.js');\nconst Worksheet = require('../worksheet');\nconst Style = require('../style');\nconst Border = require('../style/classes/border.js');\nconst Fill = require('../style/classes/fill.js');\nconst Font = require('../style/classes/font');\nconst DXFCollection = require('./dxfCollection.js');\nconst MediaCollection = require('./mediaCollection.js');\nconst DefinedNameCollection = require('../classes/definedNameCollection.js');\nconst types = require('../types/index.js');\nconst builder = require('./builder.js');\nconst http = require('http');\nconst SimpleLogger = require('../logger');\n\n/* Available options for Workbook\n{\n    jszip : {\n        compression : 'DEFLATE'\n    },\n    defaultFont : {\n        size : 12,\n        family : 'Calibri',\n        color : 'FFFFFFFF'\n    }\n}\n*/\n// Default Options for Workbook\nlet workbookDefaultOpts = {\n    jszip: {\n        compression: 'DEFLATE'\n    },\n    defaultFont: {\n        'color': 'FF000000',\n        'name': 'Calibri',\n        'size': 12,\n        'family': 'roman'\n    },\n    dateFormat: 'm/d/yy'\n};\n\n\nclass Workbook {\n\n    /**\n     * @class Workbook\n     * @param {Object} opts Workbook settings\n     * @param {Object} opts.jszip\n     * @param {String} opts.jszip.compression JSZip compression type. defaults to 'DEFLATE'\n     * @param {Object} opts.defaultFont\n     * @param {String} opts.defaultFont.color HEX value of default font color. defaults to #000000\n     * @param {String} opts.defaultFont.name Font name. defaults to Calibri\n     * @param {Number} opts.defaultFont.size Font size. defaults to 12\n     * @param {String} opts.defaultFont.family Font family. defaults to roman\n     * @param {String} opts.dataFormat Specifies the format for dates in the Workbook. defaults to 'm/d/yy'\n     * @param {Number} opts.workbookView.activeTab Specifies an unsignedInt that contains the index to the active sheet in this book view.\n     * @param {Boolean} opts.workbookView.autoFilterDateGrouping Specifies a boolean value that indicates whether to group dates when presenting the user with filtering options in the user interface.\n     * @param {Number} opts.workbookView.firstSheet Specifies the index to the first sheet in this book view.\n     * @param {Boolean} opts.workbookView.minimized Specifies a boolean value that indicates whether the workbook window is minimized.\n     * @param {Boolean} opts.workbookView.showHorizontalScroll Specifies a boolean value that indicates whether to display the horizontal scroll bar in the user interface.\n     * @param {Boolean} opts.workbookView.showSheetTabs Specifies a boolean value that indicates whether to display the sheet tabs in the user interface.\n     * @param {Boolean} opts.workbookView.showVerticalScroll Specifies a boolean value that indicates whether to display the vertical scroll bar.\n     * @param {Number} opts.workbookView.tabRatio Specifies ratio between the workbook tabs bar and the horizontal scroll bar.\n     * @param {String} opts.workbookView.visibility Specifies visible state of the workbook window. ('hidden', 'veryHidden', 'visible') (ยง18.18.89)\n     * @param {Number} opts.workbookView.windowHeight Specifies the height of the workbook window. The unit of measurement for this value is twips.\n     * @param {Number} opts.workbookView.windowWidth Specifies the width of the workbook window. The unit of measurement for this value is twips..\n     * @param {Number} opts.workbookView.xWindow Specifies the X coordinate for the upper left corner of the workbook window. The unit of measurement for this value is twips.\n     * @param {Number} opts.workbookView.yWindow Specifies the Y coordinate for the upper left corner of the workbook window. The unit of measurement for this value is twips.\n     * @param {Boolean} opts.workbookView\n     * @param {Object} opts.logger Logger that supports warn and error method, defaults to console\n     * @param {String} opts.author Name displayed as document's author\n     * @returns {Workbook}\n     */\n    constructor(opts = {}) {\n\n        const hasCustomLogger = opts.logger !== undefined;\n        const hasValidCustomLogger = hasCustomLogger && typeof opts.logger.warn === 'function' && typeof opts.logger.error === 'function';\n\n        this.logger = hasValidCustomLogger ? opts.logger : new SimpleLogger({\n            logLevel: Number.isNaN(parseInt(opts.logLevel)) ? 0 : parseInt(opts.logLevel)\n        });\n        if (hasCustomLogger && !hasValidCustomLogger) {\n            this.logger.log('opts.logger is not a valid logger');\n        }\n\n        this.opts = deepmerge(workbookDefaultOpts, opts);\n        this.author = this.opts.author || 'Microsoft Office User';\n\n        this.sheets = [];\n        this.sharedStrings = [];\n        this.sharedStringLookup = new Map();\n        this.styles = [];\n        this.stylesLookup = new Map();\n        this.dxfCollection = new DXFCollection(this);\n        this.mediaCollection = new MediaCollection();\n        this.definedNameCollection = new DefinedNameCollection();\n        this.styleData = {\n            'numFmts': [],\n            'fonts': [],\n            'fills': [new Fill({\n                type: 'pattern',\n                patternType: 'none'\n            }), new Fill({\n                type: 'pattern',\n                patternType: 'gray125'\n            })],\n            'borders': [new Border()],\n            'cellXfs': [{\n                'borderId': null,\n                'fillId': null,\n                'fontId': 0,\n                'numFmtId': null\n            }]\n        };\n\n        // Lookups for style components to quickly find existing entries\n        // - Lookup keys are stringified JSON of a style's toObject result\n        // - Lookup values are the indexes for the actual entry in the styleData arrays\n        this.styleDataLookup = {\n            'fonts': {},\n            'fills': this.styleData.fills.reduce((ret, fill, index) => {\n                ret[JSON.stringify(fill.toObject())] = index;\n                return ret;\n            }, {}),\n            'borders': this.styleData.borders.reduce((ret, border, index) => {\n                ret[JSON.stringify(border.toObject())] = index;\n                return ret;\n            }, {})\n        };\n\n        // Set Default Font and Style\n        this.createStyle({\n            font: this.opts.defaultFont\n        });\n    }\n\n    /**\n     * setSelectedTab\n     * @param {Number} tab number of sheet that should be displayed when workbook opens. tabs are indexed starting with 1\n     **/\n    setSelectedTab(id) {\n        this.sheets.forEach((s) => {\n            if (s.sheetId === id) {\n                s.opts.sheetView.tabSelected = 1;\n            } else {\n                s.opts.sheetView.tabSelected = 0;\n            }\n        });\n    }\n\n    /**\n     * writeToBuffer\n     * Writes Excel data to a node Buffer.\n     */\n    writeToBuffer() {\n        return builder.writeToBuffer(this);\n    }\n\n    /**\n     * Generate .xlsx file.\n     * @param {String} fileName Name of Excel workbook with .xslx extension\n     * @param {http.response | callback} http response object or callback function (optional).\n     * If http response object is given, file is written to http response. Useful for web applications.\n     * If callback is given, callback called with (err, fs.Stats) passed\n     */\n    write(fileName, handler) {\n\n        builder.writeToBuffer(this)\n            .then((buffer) => {\n                switch (typeof handler) {\n                    // handler passed as http response object.\n\n                    case 'object':\n                        if (handler instanceof http.ServerResponse) {\n                            handler.writeHead(200, {\n                                'Content-Length': buffer.length,\n                                'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                'Content-Disposition': `attachment; filename=\"${encodeURIComponent(fileName)}\"; filename*=utf-8''${encodeURIComponent(fileName)};`,\n                            });\n                            handler.end(buffer);\n                        } else {\n                            throw new TypeError('Unknown object sent to write function.');\n                        }\n                        break;\n\n                        // handler passed as callback function\n                    case 'function':\n                        fs.writeFile(fileName, buffer, function (err) {\n                            if (err) {\n                                handler(err);\n                            } else {\n                                fs.stat(fileName, handler);\n                            }\n                        });\n                        break;\n\n                        // no handler passed, write file to FS.\n                    default:\n\n                        fs.writeFile(fileName, buffer, function (err) {\n                            if (err) {\n                                throw err;\n                            }\n                        });\n                        break;\n                }\n            })\n            .catch((e) => {\n                if (handler instanceof http.ServerResponse) {\n                    this.logger.error(e.stack);\n                    handler.status = 500;\n                    handler.setHeader('Content-Type', 'text/plain');\n                    handler.end('500 Server Error');\n                } else if (typeof handler === 'function') {\n                    handler(e.stack);\n                } else {\n                    this.logger.error(e.stack);\n                }\n            });\n    }\n\n    /**\n     * Add a worksheet to the Workbook\n     * @param {String} name Name of the Worksheet\n     * @param {Object} opts Options for Worksheet. See Worksheet class definition\n     * @returns {Worksheet}\n     */\n    addWorksheet(name, opts) {\n        let newLength = this.sheets.push(new Worksheet(this, name, opts));\n        return this.sheets[newLength - 1];\n    }\n\n    /**\n     * Add a Style to the Workbook\n     * @param {Object} opts Options for the style. See Style class definition\n     * @returns {Style}\n     */\n    createStyle(opts) {\n        const thisStyle = new Style(this, opts);\n        const lookupKey = JSON.stringify(thisStyle.toObject());\n\n        // Use existing style if one exists\n        if (this.stylesLookup.get(lookupKey)) {\n            return this.stylesLookup.get(lookupKey);\n        }\n\n        this.stylesLookup.set(lookupKey, thisStyle);\n        const index = this.styles.push(thisStyle) - 1;\n        this.styles[index].ids.cellXfs = index;\n        return this.styles[index];\n    }\n\n    /**\n     * Gets the index of a string from the shared string array if exists and adds the string if it does not and returns the new index\n     * @param {String} val Text of string\n     * @returns {Number} index of the string in the shared strings array\n     */\n    getStringIndex(val) {\n        const lookupKey = typeof val === \"string\" ? val : JSON.stringify(val);\n        const target = this.sharedStringLookup.get(lookupKey);\n        if (_isUndefined(target)) {\n            const index = this.sharedStrings.push(val) - 1;\n            this.sharedStringLookup.set(lookupKey, index);\n            return index;\n        } else {\n            return target;\n        }\n    }\n\n    /**\n     * @func Workbook._generateXML\n     * @desc used for testing the Workbook XML generated by the builder\n     * @return {Promise} resolves with Workbook XML \n     */\n    _generateXML() {\n        return builder.workbookXML(this);\n    }\n}\n\nmodule.exports = Workbook;"]}